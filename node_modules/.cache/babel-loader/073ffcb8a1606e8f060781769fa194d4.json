{"ast":null,"code":"var _jsxFileName = \"/Users/hannahsmith/Desktop/farleyclick/src/components/Game/index.js\";\nimport React, { Component } from \"react\";\nimport Container from \"../Container\";\nimport Clicked from \"../Clicked\";\nimport Navbar from \"../Navbar\";\nimport data from \"../../data.json\";\n\nclass Game extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data,\n      score: 0,\n      topScore: 0\n    };\n\n    this.shuffle = data => {\n      let i = data.length - 1;\n\n      while (i > 0) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = data[i];\n        data[i] = data[j];\n        data[j] = temp;\n        i--;\n      }\n\n      return data;\n    };\n\n    this.handleCorrectGuess = newData => {\n      const {\n        topScore,\n        score\n      } = this.state;\n      const newScore = score + 1;\n      const newTopScore = Math.max(newScore, topScore);\n      this.setState({\n        data: this.shuffle(newData),\n        score: newScore,\n        topScore: newTopScore\n      });\n    };\n\n    this.handleIncorrectGuess = data => {\n      this.setState({\n        data: this.resetData(data),\n        score: 0\n      });\n    };\n\n    this.resetData = data => {\n      const resetData = data.map(item => ({ ...item,\n        clicked: false\n      }));\n      return this.shuffle(resetData);\n    };\n\n    this.ItemClicked = id => {\n      let guessedCorrectly = false;\n      const newData = this.state.data.map(item => {\n        const newItem = { ...item\n        };\n\n        if (newItem.id === id) {\n          if (!newItem.clicked) {\n            newItem.clicked = true;\n            guessedCorrectly = true;\n          }\n        }\n\n        return newItem;\n      });\n      guessedCorrectly ? this.handleCorrectGuess(newData) : this.handleIncorrectGuess(newData);\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: this.shuffle(this.state.data)\n    });\n  } //[{id: 1, name: \"Farley\" , image\" \"/img/meow.jpg, clicked: false\"}]\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      score: this.state.score,\n      topScore: this.state.topScore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, this.state.data.map(item => /*#__PURE__*/React.createElement(Clicked, {\n      key: item.id,\n      id: item.id,\n      handleClick: this.ItemClicked,\n      image: item.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/hannahsmith/Desktop/farleyclick/src/components/Game/index.js"],"names":["React","Component","Container","Clicked","Navbar","data","Game","state","score","topScore","shuffle","i","length","j","Math","floor","random","temp","handleCorrectGuess","newData","newScore","newTopScore","max","setState","handleIncorrectGuess","resetData","map","item","clicked","ItemClicked","id","guessedCorrectly","newItem","componentDidMount","render","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Container from \"../Container\";\nimport Clicked from \"../Clicked\";\nimport Navbar from \"../Navbar\";\nimport data from \"../../data.json\";\n\nclass Game extends Component {\n  state = {\n    data,\n    score: 0,\n    topScore: 0\n  };\n\n  componentDidMount() {\n    this.setState({ data: this.shuffle(this.state.data) });\n  }\n//[{id: 1, name: \"Farley\" , image\" \"/img/meow.jpg, clicked: false\"}]\n  shuffle = data => {\n    let i = data.length - 1;\n    while (i > 0) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = data[i];\n      data[i] = data[j];\n      data[j] = temp;\n      i--;\n    }\n    return data;\n  };\n\n  handleCorrectGuess = newData => {\n    const { topScore, score } = this.state;\n    const newScore = score + 1;\n    const newTopScore = Math.max(newScore, topScore);\n\n    this.setState({\n      data: this.shuffle(newData),\n      score: newScore,\n      topScore: newTopScore\n    });\n  };\n\n  handleIncorrectGuess = data => {\n    this.setState({\n      data: this.resetData(data),\n      score: 0\n    });\n  };\n\n  resetData = data => {\n    const resetData = data.map(item => ({ ...item, clicked: false }));\n    return this.shuffle(resetData);\n  };\n\n\n  ItemClicked = id => {\n    let guessedCorrectly = false;\n    const newData = this.state.data.map(item => {\n      const newItem = { ...item };\n      if (newItem.id === id) {\n        if (!newItem.clicked) {\n          newItem.clicked = true;\n          guessedCorrectly = true;\n        }\n      }\n      return newItem;\n    });\n    guessedCorrectly\n      ? this.handleCorrectGuess(newData)\n      : this.handleIncorrectGuess(newData);\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar score={this.state.score} topScore={this.state.topScore} />\n        <Container>\n          {this.state.data.map(item => (\n            <Clicked\n              key={item.id}\n              id={item.id}\n              handleClick={this.ItemClicked}\n              image={item.image}\n            />\n          ))}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}